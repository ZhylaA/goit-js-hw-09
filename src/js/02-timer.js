import flatpickr from "flatpickr";
import 'flatpickr/dist/flatpickr.min.css';
import Notiflix from 'notiflix';
// –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –æ–±—ä–µ–∫—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è.
// –†–∞–∑–±–µ—Ä–∏—Å—å –∑–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∫–∞–∂–¥–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ¬´Options¬ª 
// –∏ –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ –≤ —Å–≤–æ–µ–º –∫–æ–¥–µ.
// –í—ã–±–æ—Ä –¥–∞—Ç—ã
// –ú–µ—Ç–æ–¥ onClose() –∏–∑ –æ–±—å–µ–∫—Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
// –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç flatpickr.
// –ò–º–µ–Ω–Ω–æ –≤ –Ω—ë–º —Å—Ç–æ–∏—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞—Ç—É –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
// –ü–∞—Ä–∞–º–µ—Ç—Ä selectedDates —ç—Ç–æ –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç,
//     –ø–æ—ç—Ç–æ–º—É –º—ã –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç.
// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥–∞—Ç—É –≤ –ø—Ä–æ—à–ª–æ–º, –ø–æ–∫–∞–∂–∏ window.alert()
// —Å —Ç–µ–∫—Å—Ç–æ–º "Please choose a date in the future".
// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞–ª–∏–¥–Ω—É—é –¥–∞—Ç—É (–≤ –±—É–¥—É—â–µ–º),
// –∫–Ω–æ–ø–∫–∞ ¬´Start¬ª —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π.
// –ö–Ω–æ–ø–∫–∞ ¬´Start¬ª –¥–æ–ª–∂–∞ –±—ã—Ç—å –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä,
// –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –¥–∞—Ç—É –≤ –±—É–¥—É—â–µ–º.
// –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´Start¬ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏
//  –¥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞–∂–∞—Ç–∏—è.
// –û—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏
// –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´Start¬ª —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –≤—ã—á–∏—Å–ª—è—Ç—å —Ä–∞–∑
// –≤ —Å–µ–∫—É–Ω–¥—É —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –∏
// –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–∞–π–º–µ—Ä–∞, –ø–æ–∫–∞–∑—ã–≤–∞—è —á–µ—Ç—ã—Ä–µ —Ü–∏—Ñ—Ä—ã: –¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã
// –∏ —Å–µ–∫—É–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx: xx: xx: xx.
// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –±–æ–ª–µ–µ —á–µ–º –¥–≤—É—Ö —Ü–∏—Ñ—Ä.
// –¢–∞–π–º–µ—Ä –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –∫–æ–≥–¥–∞ –¥–æ—à–µ–ª –¥–æ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã, —Ç–æ –µ—Å—Ç—å 00:00:00:00.
// üí° –ù–µ –±—É–¥–µ–º —É—Å–ª–æ–∂–Ω—è—Ç—å. –ï—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å
//  –Ω–æ–≤—É—é –¥–∞—Ç—É –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.

// –î–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é convertMs,
//  –≥–¥–µ ms - —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∫–æ–Ω–µ—á–Ω–æ–π –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö.

// –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
// ‚ö†Ô∏è –°–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–¥–∞—á–µ –∑–∞–¥–∞–Ω–∏—è,
// –Ω–æ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–µ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π.

// –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–º–µ—Å—Ç–æ window.alert()
// –∏—Å–ø–æ–ª—å–∑—É–π –±–∏–±–ª–∏–æ—Ç–µ–∫—É notiflix.

// –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –æ–∂–∏–¥–∞–µ—Ç —á—Ç–æ –µ—ë –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ input[type = "text"],
//     –ø–æ—ç—Ç–æ–º—É –º—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤ HTML –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª–µ input#datetime - picker.
const refs = {
    inputClock: document.querySelector('#datetime-picker'),
    startBtn: document.querySelector('button[data-start]'),
    days: document.querySelector('span[data-days]'),
    hours: document.querySelector('span[data-hours]'),
    minutes: document.querySelector('span[data-minutes]'),
    seconds: document.querySelector('span[data-seconds]'),
    timer:document.querySelector('.timer'),
};
refs.startBtn.disabled = true;
refs.startBtn.style.backgroundColor = "blue";
refs.startBtn.style.color = "yellow";
refs.startBtn.style.width = "60px";
refs.startBtn.style.height = "30px";
refs.timer.style.display = "flex";
refs.timer.style.textAlign = "center";
// refs.hours.style.display = "flex";
// refs.minutes.style.display = "flex";
// refs.seconds.style.display = "flex";




const options = {
    enableTime: true,
    time_24hr: true,
    defaultDate: new Date(),
    minuteIncrement: 1,
    onClose(selectedDates) {
        const inputDate = selectedDates[0];
        const currenTime = Date.now();
        const deltaTime = inputDate - currenTime;
        if (deltaTime > 0) { refs.startBtn.disabled = false; }
        else {
        Notiflix.Notify.failure("Please choose a date in the future");
        }
    },
};
const foo = flatpickr(refs.inputClock, options);
class Timer {
    constructor({onTick}) {
        this.intervalId = null;
        this.isActive = false;
        this.onTick = onTick;
    }
start() {
    if (this.isActive) { return; }
    const timeSelected = foo.selectedDates[0].getTime();
    this.isActive = true;

    this.intervalId=setInterval(() => {
        const currenTime = Date.now()
        const deltaTime = timeSelected-currenTime;
        const convertedTime =this.convertMs(deltaTime);
        this.onTick(convertedTime);
        if (deltaTime <= 0) { this.stop(); }
        // console.log(`${days} : ${hours} : ${minutes} : ${seconds}`);
    }, 1000);
    }

stop() {
        clearInterval(this.intervalId);
        this.isActive = false;
        const convertedTime =this.convertMs(0);
        this.onTick(convertedTime);
    }

convertMs(ms) {
const second = 1000;
const minute = second * 60;
const hour = minute * 60;
const day = hour * 24;
const days = addLeadingZero(Math.floor(ms / day));
const hours = addLeadingZero(Math.floor((ms % day) / hour));
const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));
const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));
return { days, hours, minutes, seconds };
};

}
const timer = new Timer(
    {onTick:updateClockface}
);

refs.startBtn.addEventListener('click', () => { timer.start(); });
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é addLeadingZero(value),–∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ –º–µ—Ç–æ–¥ padStart() –∏ –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π –∏–Ω—Ç–µ—Ñ—Ä–µ–π—Å–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–π –∑–Ω–∞—á–µ–Ω–∏–µ.
function addLeadingZero(value){ return String(value).padStart(2, '0') };

function updateClockface({ days, hours, minutes, seconds }) {
    refs.days.textContent = days;
    refs.hours.textContent = hours;
    refs.minutes.textContent = minutes;
    refs.seconds.textContent = seconds;
}

